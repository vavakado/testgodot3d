[gd_scene load_steps=4 format=3 uid="uid://c4bnxlam4ff3i"]

[sub_resource type="GDScript" id="GDScript_ergqu"]
script/source = "extends CharacterBody3D


const MAX_SPEED = 10.0
const JUMP_VELOCITY = 4.5
const SENS = 0.01
const ACC = 10
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

@onready var head = $cam_head
@onready var camera = $cam_head/Camera3D

func _physics_process(delta):
	var dir = Vector3()
	
	var input_dir = Input.get_vector(\"A\", \"D\", \"W\", \"S\")
	var direction = (transform.basis * Vector3(input_dir.x,0,input_dir.y)).normalized()
	if direction:
		if abs(velocity.x) < MAX_SPEED:
			velocity.x += direction.x
		if abs(velocity.x) > MAX_SPEED:
			velocity.x -= direction.x
		if abs(velocity.z) < MAX_SPEED:
			velocity.z += direction.z
		if abs(velocity.z) > MAX_SPEED:
			velocity.z -= direction.z
	if direction == Vector3(0,0,0):
		velocity = direction
	move_and_slide()
	print(velocity.x)
func _unhandled_input(event):
	if event is InputEventMouseMotion:
		$\".\".rotate_y(-event.relative.x * SENS)
		camera.rotate_x(-event.relative.y * SENS)
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_qmodh"]
height = 2.00652

[sub_resource type="CapsuleMesh" id="CapsuleMesh_f0yh6"]

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_ergqu")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_qmodh")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_f0yh6")

[node name="cam_head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.95, 0)

[node name="Camera3D" type="Camera3D" parent="cam_head"]
fov = 108.1
size = 6.405
